==261071== Memcheck, a memory error detector
==261071== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==261071== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==261071== Command: ./executable mysh
==261071== Parent PID: 251340
==261071== 
--261071-- 
--261071-- Valgrind options:
--261071--    --leak-check=full
--261071--    --show-leak-kinds=all
--261071--    --track-origins=yes
--261071--    --verbose
--261071--    --log-file=valgrind-out.txt
--261071-- Contents of /proc/version:
--261071--   Linux version 5.4.0-124-generic (buildd@lcy02-amd64-089) (gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1)) #140-Ubuntu SMP Thu Aug 4 02:23:37 UTC 2022
--261071-- 
--261071-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--261071-- Page sizes: currently 4096, max supported 4096
--261071-- Valgrind library directory: /usr/lib/x86_64-linux-gnu/valgrind
--261071-- Reading syms from /afs/cs.wisc.edu/u/a/u/austinl/private/cs537/p2b/executable
--261071-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-2.31.so
--261071--   Considering /usr/lib/debug/.build-id/45/87364908de169dec62ffa538170118c1c3a078.debug ..
--261071--   .. build-id is valid
--261071-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux
--261071--    object doesn't have a symbol table
--261071--    object doesn't have a dynamic symbol table
--261071-- Scheduler: using generic scheduler lock implementation.
--261071-- Reading suppressions file: /usr/lib/x86_64-linux-gnu/valgrind/default.supp
==261071== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-261071-by-austinl-on-
==261071== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-261071-by-austinl-on-
==261071== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-261071-by-austinl-on-
==261071== 
==261071== TO CONTROL THIS PROCESS USING vgdb (which you probably
==261071== don't want to do, unless you know exactly what you're doing,
==261071== or are doing some strange experiment):
==261071==   /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=261071 ...command...
==261071== 
==261071== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==261071==   /path/to/gdb ./executable
==261071== and then give GDB the following command
==261071==   target remote | /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=261071
==261071== --pid is optional if only one valgrind process is running
==261071== 
--261071-- REDIR: 0x4022e20 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9ce2 (???)
--261071-- REDIR: 0x4022bf0 (ld-linux-x86-64.so.2:index) redirected to 0x580c9cfc (???)
--261071-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so
--261071--    object doesn't have a symbol table
--261071-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so
--261071--    object doesn't have a symbol table
==261071== WARNING: new redirection conflicts with existing -- ignoring it
--261071--     old: 0x04022e20 (strlen              ) R-> (0000.0) 0x580c9ce2 ???
--261071--     new: 0x04022e20 (strlen              ) R-> (2007.0) 0x0483f060 strlen
--261071-- REDIR: 0x401f600 (ld-linux-x86-64.so.2:strcmp) redirected to 0x483ffd0 (strcmp)
--261071-- REDIR: 0x4023380 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4843a20 (mempcpy)
--261071-- Reading syms from /usr/lib/x86_64-linux-gnu/libc-2.31.so
--261071--   Considering /usr/lib/debug/.build-id/18/78e6b475720c7c51969e69ab2d276fae6d1dee.debug ..
--261071--   .. build-id is valid
--261071-- REDIR: 0x490a480 (libc.so.6:memmove) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4909780 (libc.so.6:strncpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x490a7b0 (libc.so.6:strcasecmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x49090a0 (libc.so.6:strcat) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x49097e0 (libc.so.6:rindex) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x490bc50 (libc.so.6:rawmemchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4926ce0 (libc.so.6:wmemchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4926820 (libc.so.6:wcscmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x490a5e0 (libc.so.6:mempcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x490a410 (libc.so.6:bcmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4909710 (libc.so.6:strncmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4909150 (libc.so.6:strcmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x490a540 (libc.so.6:memset) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x49267e0 (libc.so.6:wcschr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4909670 (libc.so.6:strnlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4909230 (libc.so.6:strcspn) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x490a800 (libc.so.6:strncasecmp) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x49091d0 (libc.so.6:strcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x490a950 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4927f50 (libc.so.6:wcsnlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4926860 (libc.so.6:wcscpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4909820 (libc.so.6:strpbrk) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4909100 (libc.so.6:index) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4909630 (libc.so.6:strlen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4912bb0 (libc.so.6:memrchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x490a850 (libc.so.6:strcasecmp_l) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x490a3d0 (libc.so.6:memchr) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4926930 (libc.so.6:wcslen) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x4909ae0 (libc.so.6:strspn) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x490a750 (libc.so.6:stpncpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x490a6f0 (libc.so.6:stpcpy) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x490bc90 (libc.so.6:strchrnul) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x490a8a0 (libc.so.6:strncasecmp_l) redirected to 0x48311d0 (_vgnU_ifunc_wrapper)
--261071-- REDIR: 0x49f2500 (libc.so.6:__strrchr_avx2) redirected to 0x483ea10 (rindex)
--261071-- REDIR: 0x49040e0 (libc.so.6:malloc) redirected to 0x483b780 (malloc)
--261071-- REDIR: 0x4909fa0 (libc.so.6:__GI_strstr) redirected to 0x4843ca0 (__strstr_sse2)
--261071-- REDIR: 0x49ee530 (libc.so.6:__memchr_avx2) redirected to 0x4840050 (memchr)
--261071-- REDIR: 0x49f56e0 (libc.so.6:__memcpy_avx_unaligned_erms) redirected to 0x48429f0 (memmove)
--261071-- REDIR: 0x49f26d0 (libc.so.6:__strlen_avx2) redirected to 0x483ef40 (strlen)
--261071-- REDIR: 0x49f3c10 (libc.so.6:__strcpy_avx2) redirected to 0x483f090 (strcpy)
--261071-- REDIR: 0x4905b10 (libc.so.6:calloc) redirected to 0x483dce0 (calloc)
--261071-- REDIR: 0x49edaa0 (libc.so.6:__strspn_sse42) redirected to 0x4843ef0 (strspn)
--261071-- REDIR: 0x49ed820 (libc.so.6:__strcspn_sse42) redirected to 0x4843e10 (strcspn)
--261071-- REDIR: 0x4904e80 (libc.so.6:realloc) redirected to 0x483df30 (realloc)
==261071== Conditional jump or move depends on uninitialised value(s)
==261071==    at 0x490A34C: strtok_r (strtok_r.c:49)
==261071==    by 0x10966C: getcmd (mysh.c:82)
==261071==    by 0x109BD5: batch (mysh.c:213)
==261071==    by 0x109CEA: main (mysh.c:246)
==261071==  Uninitialised value was created by a stack allocation
==261071==    at 0x1094A5: getcmd (mysh.c:50)
==261071== 
--261071-- REDIR: 0x49edbd0 (libc.so.6:__strcmp_avx2) redirected to 0x483fed0 (strcmp)
==261071== Invalid read of size 1
==261071==    at 0x483F094: strcpy (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==261071==    by 0x109BF8: batch (mysh.c:215)
==261071==    by 0x109CEA: main (mysh.c:246)
==261071==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==261071== 
==261071== 
==261071== Process terminating with default action of signal 11 (SIGSEGV)
==261071==  Access not within mapped region at address 0x0
==261071==    at 0x483F094: strcpy (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==261071==    by 0x109BF8: batch (mysh.c:215)
==261071==    by 0x109CEA: main (mysh.c:246)
==261071==  If you believe this happened as a result of a stack
==261071==  overflow in your program's main thread (unlikely but
==261071==  possible), you can try to increase the size of the
==261071==  main thread stack using the --main-stacksize= flag.
==261071==  The main thread stack size used in this run was 8388608.
--261071-- REDIR: 0x49046d0 (libc.so.6:free) redirected to 0x483c9d0 (free)
==261071== 
==261071== HEAP SUMMARY:
==261071==     in use at exit: 488 bytes in 2 blocks
==261071==   total heap usage: 4 allocs, 2 frees, 4,592 bytes allocated
==261071== 
==261071== Searching for pointers to 2 not-freed blocks
==261071== Checked 68,264 bytes
==261071== 
==261071== 16 bytes in 1 blocks are still reachable in loss record 1 of 2
==261071==    at 0x483DFAF: realloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==261071==    by 0x109654: getcmd (mysh.c:81)
==261071==    by 0x109BD5: batch (mysh.c:213)
==261071==    by 0x109CEA: main (mysh.c:246)
==261071== 
==261071== 472 bytes in 1 blocks are still reachable in loss record 2 of 2
==261071==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==261071==    by 0x48EC92D: __fopen_internal (iofopen.c:65)
==261071==    by 0x48EC92D: fopen@@GLIBC_2.2.5 (iofopen.c:86)
==261071==    by 0x109B1C: batch (mysh.c:200)
==261071==    by 0x109CEA: main (mysh.c:246)
==261071== 
==261071== LEAK SUMMARY:
==261071==    definitely lost: 0 bytes in 0 blocks
==261071==    indirectly lost: 0 bytes in 0 blocks
==261071==      possibly lost: 0 bytes in 0 blocks
==261071==    still reachable: 488 bytes in 2 blocks
==261071==         suppressed: 0 bytes in 0 blocks
==261071== 
==261071== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==261071== 
==261071== 1 errors in context 1 of 2:
==261071== Invalid read of size 1
==261071==    at 0x483F094: strcpy (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==261071==    by 0x109BF8: batch (mysh.c:215)
==261071==    by 0x109CEA: main (mysh.c:246)
==261071==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==261071== 
==261071== 
==261071== 1 errors in context 2 of 2:
==261071== Conditional jump or move depends on uninitialised value(s)
==261071==    at 0x490A34C: strtok_r (strtok_r.c:49)
==261071==    by 0x10966C: getcmd (mysh.c:82)
==261071==    by 0x109BD5: batch (mysh.c:213)
==261071==    by 0x109CEA: main (mysh.c:246)
==261071==  Uninitialised value was created by a stack allocation
==261071==    at 0x1094A5: getcmd (mysh.c:50)
==261071== 
==261071== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
